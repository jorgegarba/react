{"version":3,"sources":["context/auth/authContext.js","enviroment/enviroment.js","services/auth.js","modules/auth/screens/AuthLogin.js","modules/auth/screens/AuthRegister.js","modules/auth/screens/AuthRecover.js","routers/RouterAuth.js","modules/admin/screens/AdminDashboard.js","modules/admin/screens/AdminCategorias.js","services/mesas.js","modules/admin/components/MesasFormulario.js","modules/admin/components/Cargando.js","modules/admin/components/MesasTabla.js","modules/admin/screens/AdminMesas.js","services/pedidos.js","modules/admin/components/PedidosTabla.js","modules/admin/screens/AdminPedidos.js","modules/admin/screens/AdminPlatos.js","modules/admin/components/AdminHeader.js","modules/admin/screens/AdminPedidosDetalle.js","routers/RouterAdmin.js","modules/guest/screens/GuestLanding.js","modules/guest/screens/GuestNosotros.js","routers/RouterGuest.js","context/pos/posContext.js","modules/pos/components/PosMesaItem.js","modules/pos/components/PosCargando.js","modules/pos/components/PosMesas.js","hooks/useFetch.js","modules/pos/components/PosCategorias.js","modules/pos/components/PosPlatoItem.js","services/categoria.js","modules/pos/components/PosPlatos.js","modules/pos/components/PosComandaListaItem.js","modules/pos/components/PosComandaLista.js","modules/pos/screens/Pos.js","modules/pos/components/PosHeader.js","modules/pos/components/PosNavigation.js","context/pos/posReducer.js","context/pos/posState.js","routers/RouterPos.js","routers/RutaPrivada.js","routers/RouterMain.js","context/auth/authReducer.js","context/auth/authState.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","URL_BACKEND","URL_BACKEND_HEROKU","postRegister","objUsuario","a","fetch","method","headers","body","JSON","stringify","response","json","postVerificar","token","Authorization","ok","postLogin","correo","password","AuthLogin","history","iniciarSesion","useContext","useState","email","formulario","setFormulario","handleChange","e","target","name","value","className","onSubmit","preventDefault","then","rpta","replace","for","type","placeholder","onChange","AuthRegister","usu_email","usu_nom","usu_ape","pass1","pass2","error","trim","usu_tipo","console","log","htmlFor","AuthRecover","RouterAuth","path","component","to","AdminDashboard","pedidos","mesas","categorias","reporte","setReporte","useEffect","socket","io","on","emit","dataString","dataJSON","parse","AdminCategorias","getMesas","deleteMesaById","mesa_id","postMesa","objMesa","putMesaById","MesasFormulario","obtenerMesas","modo","mesa","setModo","setMesa","mesa_nro","mesa_cap","form","setForm","Swal","fire","title","icon","text","position","timer","showConfirmButton","Cargando","tipo","texto","clase","role","MesasTabla","loading","datatable","columns","label","field","rows","map","mesa_acciones","onClick","showCancelButton","confirmButtonText","confirmButtonColor","editarMesaById","searchLabel","infoLabel","hover","striped","bordered","entriesOptions","entries","pagesAmount","data","AdminMesas","setMesas","setLoading","getPedidos","getPedidosById","pedido_id","posPedido","objPedido","PedidosTabla","setPedidos","pedido_est","Mesa","acciones","push","responsive","AdminPedidos","props","AdminPlatos","AdminHeader","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeClassName","AdminPedidosDetalle","useParams","pedido","setPedido","pedido_nro","pedido_fech","Usuario","PedidoPlatos","i","key","pedidoplato_id","pedidoplato_cant","Plato","plato_nom","src","plato_img","style","height","alt","plato_pre","toFixed","RouterAdmin","GuestLanding","GuestNosotros","RouterGuest","PosContext","PosMesaItem","localPosContext","globalObjMesa","seleccionarMesa","PosCargando","PosMesas","mesasString","mesasJSON","content","useFetch","url","result","estado","setEstado","hacerFetch","PosCategorias","seleccionarCategoria","globalObjCategoria","objCategoria","activo","categoria_id","categoria_nom","PosPlatoItem","objPlato","incrementarPlato","plato_id","getPlatosByCategoriaId","PosPlatos","platos","setPlatos","Platos","PosComandaListaItem","pedidoItem","PosComandaLista","globalPedidos","pedidoActual","find","pedidoplatos","Pos","globalPagar","withRouter","localAuthContext","cerrarSesion","PosNavigation","PosReducer","stateActual","action","PosState","useReducer","state","dispatch","usu_id","Provider","objPedidoPlato","globalPedidosNuevo","forEach","fechaActual","moment","format","filter","children","RouterPos","RutaPrivada","Componente","componente","autenticado","cargando","RouterMain","basename","AuthReducer","localStorage","removeItem","AuthState","iniciarSesionConLocalStorage","getItem","payloadEnc","split","payloadDes","window","atob","payloadJSON","setItem","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3c0da4f8.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n","export const URL_BACKEND = \"https://5f35f3e65b91f60016ca524a.mockapi.io\";\r\nexport const URL_BACKEND_HEROKU = \"https://codigo3-pedidos.herokuapp.com\";\r\n","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const postRegister = async (objUsuario) => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/registro`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objUsuario),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const postVerificar = async (token) => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/verificar`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n  const json = await response.json();\r\n  return json.ok;\r\n};\r\n\r\nexport const postLogin = async (correo, password) => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      correo: correo,\r\n      password: password,\r\n    }),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport { postLogin } from \"../../../services/auth\";\r\n\r\nconst AuthLogin = ({ history }) => {\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { iniciarSesion } = localAuthContext;\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO: validar los campos del formulario e inclusive generar una variable\r\n    // de estado de error en el formulario\r\n    postLogin(formulario.email, formulario.password).then((rpta) => {\r\n      if (rpta.ok) {\r\n        iniciarSesion(rpta.token);\r\n        history.replace(\"/pos\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={onSubmit}>\r\n          <label for=\"\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={formulario.email}\r\n            onChange={handleChange}\r\n          />\r\n          <label for=\"\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={formulario.password}\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AuthLogin;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { postRegister } from \"../../../services/auth\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\n\r\nconst AuthRegister = ({ history }) => {\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { iniciarSesion } = localAuthContext;\r\n\r\n  const [formulario, setFormulario] = useState({\r\n    usu_email: \"\",\r\n    usu_nom: \"\",\r\n    usu_ape: \"\",\r\n    pass1: \"\",\r\n    pass2: \"\",\r\n    error: false,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const { usu_ape, usu_email, usu_nom, pass1, pass2 } = formulario;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      usu_ape.trim() !== \"\" &&\r\n      usu_nom.trim() !== \"\" &&\r\n      usu_email.trim() !== \"\" &&\r\n      pass1.trim() !== \"\" &&\r\n      pass1 === pass2\r\n    ) {\r\n      const objUsuario = {\r\n        ...formulario,\r\n        password: pass1,\r\n        usu_tipo: \"admin\",\r\n      };\r\n      postRegister(objUsuario).then((rpta) => {\r\n        console.log(rpta);\r\n        if (rpta.ok) {\r\n          iniciarSesion(rpta.token);\r\n          // history.replace(\"ruta\") borra el historial de paginas visitadas en el dominio\r\n          // y cancela la posibilidad de hacer \"Atrás\" en el navegador\r\n          history.replace(\"/pos\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Crear Cuenta</h1>\r\n        <form className=\"formulario\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"\">Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Nombre\"\r\n            onChange={handleChange}\r\n            value={formulario.usu_nom}\r\n            name=\"usu_nom\"\r\n          />\r\n          <label htmlFor=\"\">Apellido:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Apellido\"\r\n            onChange={handleChange}\r\n            name=\"usu_ape\"\r\n            value={formulario.usu_ape}\r\n          />\r\n          <label htmlFor=\"\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\"\r\n            name=\"usu_email\"\r\n            value={formulario.usu_email}\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            name=\"pass1\"\r\n            value={formulario.pass1}\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"\">Repita Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            name=\"pass2\"\r\n            value={formulario.pass2}\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Registrarse\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AuthRegister;\r\n","import React from 'react'\r\n\r\nconst AuthRecover = () => {\r\n  return (\r\n    <div>\r\n      PÁGINA DE RECURPERACIÓN DE CONTRASEÑA\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthRecover\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AuthLogin from \"../modules/auth/screens/AuthLogin\";\r\nimport AuthRegister from \"../modules/auth/screens/AuthRegister\";\r\nimport AuthRecover from \"../modules/auth/screens/AuthRecover\";\r\nimport \"./../modules/auth/styles/auth.css\";\r\nconst RouterAuth = () => {\r\n  return (\r\n    <>\r\n      {/* Podrían colocar contenido estático */}\r\n      <Switch>\r\n        <Route path={\"/auth/login\"} component={AuthLogin} />\r\n        <Route path={\"/auth/register\"} component={AuthRegister} />\r\n        <Route path={\"/auth/recover\"} component={AuthRecover} />\r\n        <Redirect to={\"/auth/login\"} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RouterAuth;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { URL_BACKEND_HEROKU } from \"../../../enviroment/enviroment\";\r\nimport { useState } from \"react\";\r\nconst AdminDashboard = () => {\r\n  // ir haciendo logica para consuimir sockets del bacjend\r\n  const [reporte, setReporte] = useState({\r\n    pedidos: \"cargando...\",\r\n    mesas: \"cargando...\",\r\n    categorias: \"cargando...\",\r\n  });\r\n  useEffect(() => {\r\n    const socket = io(URL_BACKEND_HEROKU);\r\n\r\n    socket.on(\"connect\", () => {\r\n      // emit(\"evento\") => disparar un mensaje hacia el socket backend\r\n      socket.emit(\"peticion-reporte-dashboard\");\r\n    });\r\n\r\n    socket.on(\"reporte-dashboard\", (dataString) => {\r\n      const dataJSON = JSON.parse(dataString);\r\n      console.log(dataString);\r\n      setReporte(dataJSON);\r\n      /**\r\n       * {\r\n       *  pedidos: 5,\r\n       *  mesas: 7,\r\n       *  categorias: 9\r\n       * }\r\n       */\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4 text-center\">DASHBOARD</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Pedidos</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.pedidos}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Mesas</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.mesas}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h5 className=\"card-title text-center\">Categorias</h5>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"display-4 text-center\">{reporte.categorias}</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react'\r\n\r\nconst AdminCategorias = () => {\r\n  return (\r\n    <div>\r\n      Página de AdminCategorias\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminCategorias\r\n","import { URL_BACKEND, URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const getMesas = async () => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/mesa`);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const deleteMesaById = async (mesa_id) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas/${mesa_id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const postMesa = async (objMesa) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objMesa),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const putMesaById = async (objMesa) => {\r\n  const response = await fetch(`${URL_BACKEND}/mesas/${objMesa.mesa_id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objMesa),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { postMesa, putMesaById } from \"../../../services/mesas\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst MesasFormulario = ({ obtenerMesas, modo, mesa, setModo, setMesa }) => {\r\n  const [form, setForm] = useState({\r\n    mesa_nro: \"\",\r\n    mesa_cap: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (modo === \"editar\") {\r\n      setForm(mesa);\r\n    }\r\n  }, [mesa, modo]);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (form.mesa_cap > 0 && form.mesa_nro.trim() !== \"\") {\r\n      // el form está validado\r\n      if (modo === \"crear\") {\r\n        postMesa(form).then((rpta) => {\r\n          if (rpta.mesa_id) {\r\n            setForm({\r\n              mesa_nro: \"\",\r\n              mesa_cap: 0,\r\n            });\r\n            obtenerMesas();\r\n            Swal.fire({\r\n              title: \"Hecho!\",\r\n              icon: \"success\",\r\n              text: \"Registro creado exitosamente\",\r\n              position: \"top-end\",\r\n              timer: 1500,\r\n              showConfirmButton: false,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        //editar\r\n        putMesaById(form).then((rpta) => {\r\n          if (rpta.mesa_id) {\r\n            setForm({ mesa_nro: \"\", mesa_cap: 0 });\r\n            obtenerMesas();\r\n            setModo(\"crear\");\r\n            setMesa({});\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Registro correctamente actualizado\",\r\n              timer: 1500,\r\n              position: \"top-end\",\r\n              showConfirmButton: false,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Nro. mesa:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"número de mesa\"\r\n                  value={form.mesa_nro}\r\n                  name=\"mesa_nro\"\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Capacidad:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Capacidad...\"\r\n                  name=\"mesa_cap\"\r\n                  onChange={handleChange}\r\n                  value={form.mesa_cap}\r\n                />\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  {modo === \"crear\" ? <>Crear</> : <>Guardar Cambios</>}\r\n                </button>\r\n                <button className=\"btn btn-secondary ml-3\" type=\"button\">\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MesasFormulario;\r\n","import React from \"react\";\r\n\r\nconst Cargando = ({ tipo = \"info\", texto }) => {\r\n  const clase = `alert alert-${tipo}`;\r\n  return (\r\n    <div className={clase} role=\"alert\">\r\n      <h4 className=\"alert-heading\">Cargando</h4>\r\n      <p>\r\n        <i className=\"fas fa-spinner fa-2x fa-spin\"></i>\r\n      </p>\r\n      <p>{texto}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cargando;\r\n","import React from \"react\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport { deleteMesaById } from \"../../../services/mesas\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cargando from \"./Cargando\";\r\n\r\nconst MesasTabla = ({ mesas, loading, obtenerMesas, setMesa, setModo }) => {\r\n  const eliminarMesaById = (mesa_id) => {\r\n    Swal.fire({\r\n      icon: \"error\",\r\n      text: \"Los cambios son irreversibles\",\r\n      title: \"¿Seguro que desea eliminar el registro?\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"ELIMINAR\",\r\n      confirmButtonColor: \"#de0a0a\",\r\n    }).then((rpta) => {\r\n      if (rpta.value) {\r\n        //sí, eliminar\r\n        deleteMesaById(mesa_id).then((rpta) => {\r\n          if (rpta.mesa_id) {\r\n            obtenerMesas();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Eliminado correctamente\",\r\n              timer: 1500,\r\n              position: \"top-end\",\r\n              showConfirmButton: false,\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Hubieron errores en el servidor\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const editarMesaById = (objMesa) => {\r\n    setModo(\"editar\");\r\n    setMesa(objMesa);\r\n  };\r\n\r\n  const datatable = {\r\n    columns: [\r\n      { label: \"ID\", field: \"mesa_id\" },\r\n      { label: \"Nro mesa\", field: \"mesa_nro\" },\r\n      { label: \"Capacidad\", field: \"mesa_cap\" },\r\n      { label: \"Acciones\", field: \"mesa_acciones\" },\r\n    ],\r\n    rows: mesas.map((objMesa) => {\r\n      return {\r\n        ...objMesa,\r\n        mesa_cap: objMesa.mesa_cap + \" personas\",\r\n        mesa_acciones: (\r\n          <>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => {\r\n                eliminarMesaById(objMesa.mesa_id);\r\n              }}\r\n            >\r\n              Eliminar\r\n            </button>\r\n            <button\r\n              className=\"btn btn-warning ml-2\"\r\n              onClick={() => {\r\n                editarMesaById(objMesa);\r\n              }}\r\n            >\r\n              Editar\r\n            </button>\r\n          </>\r\n        ),\r\n      };\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            {loading ? (\r\n              <Cargando texto=\"Cargando los datos\" />\r\n            ) : (\r\n              <MDBDataTableV5\r\n                searchLabel={\"Buscar\"}\r\n                infoLabel={[\"Mostrando\", \"al\", \"de\", \"registros\"]}\r\n                hover\r\n                striped\r\n                bordered\r\n                entriesOptions={[5, 20, 25]}\r\n                entries={5}\r\n                pagesAmount={4}\r\n                data={datatable}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MesasTabla;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MesasFormulario from \"../components/MesasFormulario\";\r\nimport MesasTabla from \"../components/MesasTabla\";\r\nimport { getMesas } from \"../../../services/mesas\";\r\n\r\nconst AdminMesas = () => {\r\n  const [mesas, setMesas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [modo, setModo] = useState(\"crear\");\r\n  const [mesa, setMesa] = useState({});\r\n\r\n  const obtenerMesas = () => {\r\n    getMesas().then((rpta) => {\r\n      setMesas(rpta);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    obtenerMesas();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"text-center\">Mantenimiento de Mesas</h1>\r\n        </div>\r\n      </div>\r\n      <MesasFormulario\r\n        obtenerMesas={obtenerMesas}\r\n        modo={modo}\r\n        mesa={mesa}\r\n        setModo={setModo}\r\n        setMesa={setMesa}\r\n      />\r\n      <MesasTabla\r\n        mesas={mesas}\r\n        loading={loading}\r\n        obtenerMesas={obtenerMesas}\r\n        setMesa={setMesa}\r\n        setModo={setModo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMesas;\r\n","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\nexport const getPedidos = async () => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/pedido`);\r\n  const json = response.json();\r\n  return json;\r\n};\r\n\r\nexport const getPedidosById = async (pedido_id) => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/pedido/${pedido_id}`);\r\n  const json = response.json();\r\n  return json;\r\n};\r\n\r\nexport const posPedido = async (objPedido) => {\r\n  const response = await fetch(`${URL_BACKEND_HEROKU}/pedido`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(objPedido),\r\n  });\r\n  const json = response.json();\r\n  return json;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getPedidos } from \"../../../services/pedidos\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nconst PedidosTabla = ({ history }) => {\r\n  const [pedidos, setPedidos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPedidos().then((rpta) => {\r\n      if (rpta.ok) {\r\n        setPedidos(rpta.pedidos);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const irAVerPedido = (pedido_id) => {\r\n    history.push(`/admin/pedidos/${pedido_id}`);\r\n  };\r\n\r\n  const datatable = {\r\n    columns: [\r\n      { label: \"ID\", field: \"pedido_id\" },\r\n      { label: \"Nro. Pedido\", field: \"pedido_nro\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Nro Mesa\", field: \"mesa_nro\" },\r\n      { label: \"Acciones\", field: \"acciones\" },\r\n    ],\r\n    rows: pedidos.map((objPedido) => ({\r\n      ...objPedido,\r\n      pedido_est:\r\n        objPedido.pedido_est === \"pagado\" ? (\r\n          <span className=\"badge badge-success\">Pagado</span>\r\n        ) : (\r\n          <span className=\"badge badge-danger\">Anulado</span>\r\n        ),\r\n      mesa_nro: objPedido.Mesa.mesa_nro,\r\n      acciones: (\r\n        <button\r\n          className=\"btn btn-block btn-dark\"\r\n          onClick={() => {\r\n            irAVerPedido(objPedido.pedido_id);\r\n          }}\r\n        >\r\n          Ver Detalles\r\n        </button>\r\n      ),\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <MDBDataTableV5\r\n              responsive\r\n              hover\r\n              striped\r\n              bordered\r\n              data={datatable}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PedidosTabla;\r\n","import React from \"react\";\r\nimport PedidosTabla from \"./../components/PedidosTabla\";\r\nconst AdminPedidos = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"text-center\">Pedidos</h1>\r\n        </div>\r\n      </div>\r\n      <PedidosTabla history={props.history} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPedidos;\r\n","import React from 'react'\r\n\r\nconst AdminPlatos = () => {\r\n  return (\r\n    <div>\r\n      Página de admin platos\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPlatos\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst AdminHeader = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"!#\">\r\n          Navbar\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler d-lg-none\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavId\"\r\n          aria-controls=\"collapsibleNavId\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        ></button>\r\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={\"/admin/dashboard\"}\r\n                className=\"nav-link\"\r\n                activeClassName={\"active\"}\r\n              >\r\n                Dashboard\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={\"/admin/mesas\"}\r\n                className=\"nav-link\"\r\n                activeClassName={\"active\"}\r\n              >\r\n                Mesas\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={\"/admin/categorias\"}\r\n                className=\"nav-link\"\r\n                activeClassName={\"active\"}\r\n              >\r\n                Categorias\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={\"/admin/platos\"}\r\n                className=\"nav-link\"\r\n                activeClassName={\"active\"}\r\n              >\r\n                Platos\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={\"/admin/pedidos\"}\r\n                className=\"nav-link\"\r\n                activeClassName={\"active\"}\r\n              >\r\n                Pedidos\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getPedidosById } from \"../../../services/pedidos\";\r\nimport Cargando from \"../components/Cargando\";\r\n\r\nconst AdminPedidosDetalle = ({ history }) => {\r\n  // console.log(props.match.params.pedido_id);\r\n  const { pedido_id } = useParams();\r\n  const [pedido, setPedido] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPedidosById(pedido_id).then((rpta) => {\r\n      // rpta.ok && setPedido(rpta.pedido);\r\n      if (rpta.ok) {\r\n        // console.log(rpta.pedido.Mesa.mesa_nro);\r\n        setPedido(rpta.pedido);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [pedido_id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"text-center\">Detalle de Pedido</h1>\r\n          {loading && (\r\n            <Cargando tipo={\"info\"} texto={\"Cargando detalle de pedido\"} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {!loading && (\r\n        <>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Pedido</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">\r\n                    <strong>Nro Pedido: </strong>\r\n                    {pedido.pedido_nro}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Estado: </strong>{\" \"}\r\n                    {pedido.pedido_est === \"pagado\" ? (\r\n                      <span className=\"badge badge-success\">Pagado</span>\r\n                    ) : (\r\n                      <span className=\"badge badge-danger\">Anulado</span>\r\n                    )}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Fecha: </strong>\r\n                    {pedido.pedido_fech}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Mesa</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">\r\n                    <strong>Nro Mesa: </strong>\r\n                    {pedido.Mesa.mesa_nro}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Capacidad: </strong>\r\n                    {pedido.Mesa.mesa_cap} personas.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-header\">\r\n                  <h5 className=\"card-title\">Trabajador</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p className=\"card-text\">\r\n                    <strong>Nombre: </strong>\r\n                    {pedido.Usuario.usu_nom}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Apellido: </strong>\r\n                    {pedido.Usuario.usu_ape}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <strong>Tipo: </strong>\r\n                    {pedido.Usuario.usu_tipo}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"card shadow\">\r\n                <div className=\"card-header\">\r\n                  <h4 className=\"card-title\">Detalle del Pedido</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <table className=\"table table-hover table-striped table-bordered text-center\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Cant.</th>\r\n                        <th>Descripción</th>\r\n                        <th>Imagen</th>\r\n                        <th>P. Unitario</th>\r\n                        <th>P. Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {pedido.PedidoPlatos.map((objPedido, i) => {\r\n                        return (\r\n                          <tr key={objPedido.pedidoplato_id}>\r\n                            <td>{i + 1}</td>\r\n                            <td>{objPedido.pedidoplato_cant}</td>\r\n                            <td>{objPedido.Plato.plato_nom}</td>\r\n                            <td>\r\n                              <img\r\n                                src={objPedido.Plato.plato_img}\r\n                                style={{\r\n                                  height: \"100px\",\r\n                                }}\r\n                                alt={\"imagen del plato\"}\r\n                              />\r\n                            </td>\r\n                            <td>S/ {objPedido.Plato.plato_pre}</td>\r\n                            <td>\r\n                              S/{\" \"}\r\n                              {(\r\n                                +objPedido.pedidoplato_cant *\r\n                                +objPedido.Plato.plato_pre\r\n                              ).toFixed(2)}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-4 justify-content-end\">\r\n            <div className=\"col-md-2\">\r\n              <button\r\n                className=\"btn btn-block btn-dark\"\r\n                onClick={() => {\r\n                  // history.goBack();\r\n                  history.push(\"/admin/pedidos\");\r\n                }}\r\n              >\r\n                <i className=\"fas fa-chevron-left\"></i> Atrás\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPedidosDetalle;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AdminDashboard from \"../modules/admin/screens/AdminDashboard\";\r\nimport AdminCategorias from \"../modules/admin/screens/AdminCategorias\";\r\nimport AdminMesas from \"../modules/admin/screens/AdminMesas\";\r\nimport AdminPedidos from \"../modules/admin/screens/AdminPedidos\";\r\nimport AdminPlatos from \"../modules/admin/screens/AdminPlatos\";\r\nimport AdminHeader from \"../modules/admin/components/AdminHeader\";\r\nimport AdminPedidosDetalle from \"../modules/admin/screens/AdminPedidosDetalle\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst RouterAdmin = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <main className=\"container\">\r\n        <Switch>\r\n          <Route path={\"/admin/dashboard\"} component={AdminDashboard} />\r\n          <Route path={\"/admin/categorias\"} component={AdminCategorias} />\r\n          <Route path={\"/admin/mesas\"} component={AdminMesas} />\r\n          <Route\r\n            path={\"/admin/pedidos/:pedido_id\"}\r\n            component={AdminPedidosDetalle}\r\n          />\r\n          <Route path={\"/admin/pedidos\"} component={AdminPedidos} />\r\n          <Route path={\"/admin/platos\"} component={AdminPlatos} />\r\n          <Redirect to={\"/admin/dashboard\"} />\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RouterAdmin;\r\n","import React from 'react'\r\n\r\nconst GuestLanding = () => {\r\n  return (\r\n    <div>\r\n      LANDING PAGE DEL PROYECTO\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuestLanding\r\n","import React from 'react'\r\n\r\nconst GuestNosotros = () => {\r\n  return (\r\n    <div>\r\n      PÁGINA DE NOSOTROS\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuestNosotros\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport GuestLanding from \"../modules/guest/screens/GuestLanding\";\r\nimport GuestNosotros from \"../modules/guest/screens/GuestNosotros\";\r\n\r\nconst RouterGuest = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={\"/nosotros\"} component={GuestNosotros} />\r\n      <Route path={\"/\"} component={GuestLanding} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RouterGuest;\r\n","import { createContext } from \"react\";\r\n\r\nconst PosContext = createContext();\r\n\r\nexport default PosContext;\r\n","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosMesaItem = ({ objMesa }) => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalObjMesa, seleccionarMesa } = localPosContext;\r\n  return (\r\n    <li\r\n      className={`mesas__mesa ${globalObjMesa?.mesa_id === objMesa.mesa_id && \"activo\"}`}\r\n      onClick={() => {\r\n        seleccionarMesa(objMesa);\r\n      }}\r\n    >\r\n      <span className=\"mesas__titulo\">Mesa</span>\r\n      <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosMesaItem;\r\n","import React from \"react\";\r\n\r\nconst PosCargando = () => {\r\n  return (\r\n    <div className=\"spinner-border text-light\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosCargando;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PosMesaItem from \"./PosMesaItem\";\r\nimport PosCargando from \"./PosCargando\";\r\nimport { getMesas } from \"../../../services/mesas\";\r\nimport io from \"socket.io-client\";\r\nimport { URL_BACKEND_HEROKU } from \"../../../enviroment/enviroment\";\r\n\r\nconst PosMesas = () => {\r\n  const [mesas, setMesas] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Cuando el socket se instancia, automáticamente es conectado al backend\r\n    const socket = io(URL_BACKEND_HEROKU);\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"CONECTADO! =)\");\r\n    });\r\n    socket.on(\"mesas-lista\", (mesasString) => {\r\n      const mesasJSON = JSON.parse(mesasString);\r\n      setMesas(mesasJSON);\r\n    });\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"DESCONECTADO =(\");\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getMesas().then((rpta) => {\r\n      if (rpta.ok) {\r\n        setMesas(rpta.content);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {loading && <PosCargando />}\r\n        {!loading &&\r\n          mesas.map((objMesa) => {\r\n            return <PosMesaItem objMesa={objMesa} key={objMesa.mesa_id} />;\r\n          })}\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosMesas;\r\n","import { useState, useEffect } from \"react\";\r\nimport { URL_BACKEND_HEROKU } from \"./../enviroment/enviroment\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [estado, setEstado] = useState({ result: null, loading: true });\r\n\r\n  useEffect(() => {\r\n    const hacerFetch = async () => {\r\n      const rpta = await fetch(`${URL_BACKEND_HEROKU}${url}`);\r\n      const json = await rpta.json();\r\n      setEstado({\r\n        result: json,\r\n        loading: false,\r\n      });\r\n    };\r\n    hacerFetch();\r\n  }, [url]);\r\n\r\n  return estado;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../../hooks/useFetch\";\r\nimport PosCargando from \"./PosCargando\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosCategorias = () => {\r\n  const { result, loading } = useFetch(\"/categoria\");\r\n  const localPosContext = useContext(PosContext);\r\n  const { seleccionarCategoria, globalObjCategoria } = localPosContext;\r\n\r\n  return (\r\n    <div className=\"carta__categorias\">\r\n      {loading && <PosCargando />}\r\n      {!loading &&\r\n        result.content.map((objCategoria) => {\r\n          const activo =\r\n            globalObjCategoria?.categoria_id === objCategoria.categoria_id\r\n              ? \"activo\"\r\n              : \"\";\r\n\r\n          return (\r\n            <button\r\n              className={`boton boton-outline-primary ${activo}`}\r\n              key={objCategoria.categoria_id}\r\n              onClick={() => {\r\n                seleccionarCategoria(objCategoria);\r\n              }}\r\n            >\r\n              {objCategoria.categoria_nom}\r\n            </button>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosCategorias;\r\n","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosPlatoItem = ({ objPlato }) => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { incrementarPlato } = localPosContext;\r\n\r\n  return (\r\n    <div className=\"carta__plato\">\r\n      <img src={objPlato.plato_img} alt=\"Imagen del plato\" />\r\n      <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n      <span className=\"carta__precio\">S/ {objPlato.plato_pre}</span>\r\n      <div className=\"carta__botones\">\r\n        <button className=\"boton boton-outline-primary boton-restar\">-1</button>\r\n        <button\r\n          className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            incrementarPlato(objPlato.plato_id);\r\n          }}\r\n        >\r\n          +1\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosPlatoItem;\r\n","import { URL_BACKEND_HEROKU } from \"../enviroment/enviroment\";\r\n\r\n/**\r\n * Funcion que obtiene los platos de una categoria\r\n * dado el id de la categoria\r\n * @param {*} categoria_id\r\n */\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n  const response = await fetch(\r\n    `${URL_BACKEND_HEROKU}/categoria/${categoria_id}/platos`\r\n  );\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PosPlatoItem from \"./PosPlatoItem\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\nimport { getPlatosByCategoriaId } from \"../../../services/categoria\";\r\n\r\nconst PosPlatos = () => {\r\n  const [platos, setPlatos] = useState([]);\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalObjCategoria } = localPosContext;\r\n  useEffect(() => {\r\n    if (globalObjCategoria) {\r\n      getPlatosByCategoriaId(globalObjCategoria.categoria_id).then((rpta) => {\r\n        console.log(rpta);\r\n        if (rpta.ok) {\r\n          setPlatos(rpta.content.Platos);\r\n        }\r\n      });\r\n    }\r\n  }, [globalObjCategoria]);\r\n  return (\r\n    <div className=\"carta__platos\">\r\n      {platos.map((objPlato) => {\r\n        return <PosPlatoItem objPlato={objPlato} key={objPlato.plato_id} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default PosPlatos;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../../hooks/useFetch\";\r\nimport PosCargando from \"./PosCargando\";\r\n\r\nconst PosComandaListaItem = ({ pedidoItem }) => {\r\n  const { loading, result } = useFetch(`/plato/${pedidoItem.plato_id}`);\r\n  \r\n  // TODO: useCallback, useMemo\r\n\r\n  return loading ? (\r\n    <PosCargando />\r\n  ) : (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span>\r\n          <strong>{result.content.plato_nom}</strong>\r\n        </span>\r\n        <span>Precio: S/ {result.content.plato_pre}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{pedidoItem.pedidoplato_cant}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>\r\n          S/{\" \"}\r\n          {(+result.content.plato_pre * +pedidoItem.pedidoplato_cant).toFixed(2)}\r\n        </strong>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosComandaListaItem;\r\n","import React, { useContext } from \"react\";\r\nimport PosComandaListaItem from \"./PosComandaListaItem\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosComandaLista = () => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalPedidos, globalObjMesa } = localPosContext;\r\n\r\n  const pedidoActual = globalPedidos.find(\r\n    (objPedido) => objPedido.mesa_id === globalObjMesa.mesa_id\r\n  );\r\n\r\n  return (\r\n    <ul className=\"comanda__lista\">\r\n      {!pedidoActual ? (\r\n        <strong>No hay pedidos en esta mesa 🙄</strong>\r\n      ) : (\r\n        pedidoActual.pedidoplatos.map((pedidoItem, i) => {\r\n          return <PosComandaListaItem key={i} pedidoItem={pedidoItem} />;\r\n        })\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PosComandaLista;\r\n","import React, { useContext } from \"react\";\r\nimport PosMesas from \"../components/PosMesas\";\r\nimport PosCategorias from \"../components/PosCategorias\";\r\nimport PosPlatos from \"../components/PosPlatos\";\r\nimport PosComandaLista from \"../components/PosComandaLista\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst Pos = () => {\r\n  const localPosContext = useContext(PosContext);\r\n  const { globalObjMesa, globalPagar } = localPosContext;\r\n\r\n  return (\r\n    <section className=\"tabla\">\r\n      <PosMesas />\r\n      <div className=\"pedido\">\r\n        <div className=\"carta\">\r\n          <PosCategorias />\r\n          <PosPlatos />\r\n        </div>\r\n        <div className=\"boleta\">\r\n          <h3>Pedido</h3>\r\n          <div className=\"comanda\">\r\n            {globalObjMesa ? (\r\n              <>\r\n                <h4 className=\"comanda__mesa\">Mesa {globalObjMesa.mesa_nro}</h4>\r\n                <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n                <hr />\r\n                <PosComandaLista />\r\n                <button\r\n                  className=\"boton boton-success boton-block\"\r\n                  onClick={() => {\r\n                    globalPagar();\r\n                  }}\r\n                >\r\n                  PAGAR\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <strong>No hay ninguna mesa seleccionada 😪</strong>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pos;\r\n","import React, { useContext } from \"react\";\r\nimport AuthContext from \"../../../context/auth/authContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst PosHeader = ({ history }) => {\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { usu_nom, cerrarSesion } = localAuthContext;\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src=\"/assets/img/logo.svg\" alt=\"\" />\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src=\"/assets/img/search.svg\" alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          className=\"header__input\"\r\n          placeholder=\"Busca un término\"\r\n        />\r\n      </div>\r\n      <div className=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>{usu_nom}</span>\r\n        <button\r\n          className=\"boton boton-success\"\r\n          onClick={() => {\r\n            cerrarSesion();\r\n            history.replace(\"/\");\r\n          }}\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\n// Cuando envolvemos un compoennte en la función withRouter,\r\n// éste componente recibe en sus props, todos los parametros\r\n// del enrutador así como history, location, matchParams ,etc\r\nexport default withRouter(PosHeader);\r\n","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../context/pos/posContext\";\r\n\r\nconst PosNavigation = () => {\r\n  const localPosContext = useContext(PosContext);\r\n  console.log(localPosContext);\r\n\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        <li>\r\n          <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n        <li>\r\n          <img src=\"/assets/img/plato_blanco.svg\" alt=\"\" />\r\n          <span>Bebidas</span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PosNavigation;\r\n","const PosReducer = (stateActual, action) => {\r\n  switch (action.type) {\r\n    case \"SELECCIONAR_MESA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjMesa: action.data,\r\n      };\r\n      break;\r\n    case \"SELECCIONAR_CATEGORIA\":\r\n      return {\r\n        ...stateActual,\r\n        globalObjCategoria: action.data,\r\n      };\r\n    case \"ACTUALIZAR_GLOBAL_PEDIDOS\":\r\n      return {\r\n        ...stateActual,\r\n        globalPedidos: action.data,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default PosReducer;\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport PosReducer from \"./posReducer\";\r\nimport PosContext from \"./posContext\";\r\nimport { posPedido } from \"../../services/pedidos\";\r\nimport moment from \"moment\";\r\nimport AuthContext from \"./../../context/auth/authContext\";\r\n\r\nconst PosState = (props) => {\r\n  const [state, dispatch] = useReducer(PosReducer, {\r\n    globalObjMesa: null,\r\n    globalObjCategoria: null,\r\n    globalPedidos: [],\r\n  });\r\n\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { usu_id } = localAuthContext;\r\n\r\n  /**\r\n   * A continuación, la lista de funciones que intentarán modificar el estado\r\n   */\r\n\r\n  const seleccionarMesa = (objMesa) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_MESA\",\r\n      data: { ...objMesa },\r\n    });\r\n  };\r\n\r\n  const seleccionarCategoria = (objCategoria) => {\r\n    dispatch({\r\n      type: \"SELECCIONAR_CATEGORIA\",\r\n      data: { ...objCategoria },\r\n    });\r\n  };\r\n\r\n  const incrementarPlato = (plato_id) => {\r\n    const { globalObjMesa, globalPedidos } = state;\r\n    // preguntamos si no tenemos una mesa global seleccionada\r\n    if (!globalObjMesa) return;\r\n    // buscar el pedido de la mesa seleccionada, es posible que la mesa\r\n    // seleccionada no tenga pedidos aún, como es posible que tenga pedidos\r\n    const pedidoActual = globalPedidos.find(\r\n      (objPedido) => objPedido.mesa_id === globalObjMesa.mesa_id\r\n    );\r\n    // si la mesa actual seleccionada tiene un pedido activo\r\n    if (pedidoActual) {\r\n      let pedidoPlato = pedidoActual.pedidoplatos.find(\r\n        (objPedidoPlato) => objPedidoPlato.plato_id === plato_id\r\n      );\r\n      //la mesa sí tenía un pedido.\r\n      // pero.... ¿Tenía el pedido un plato con el plato_id que queremos incrementar?\r\n      if (pedidoPlato) {\r\n        // sí tenía un plato\r\n        const globalPedidosNuevo = [\r\n          ...globalPedidos.map((objPedido) => {\r\n            if (objPedido.mesa_id === globalObjMesa.mesa_id) {\r\n              objPedido.pedidoplatos.forEach((objPlato) => {\r\n                if (objPlato.plato_id === plato_id) {\r\n                  objPlato.pedidoplato_cant = objPlato.pedidoplato_cant + 1;\r\n                }\r\n              });\r\n              return objPedido;\r\n            }\r\n            // DE TODAS FORMAS, MAP tiene que retornar un objeto\r\n            return objPedido;\r\n          }),\r\n        ];\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: globalPedidosNuevo,\r\n        });\r\n      } else {\r\n        // La mesa, sí tenía un pedido pero no tenía el plato el cual estamos incrementando\r\n        // ES DECIR habían otros platos en la orden.\r\n        const globalPedidosNuevo = [\r\n          ...globalPedidos.map((objPedido) => {\r\n            if (objPedido.mesa_id === globalObjMesa.mesa_id) {\r\n              objPedido.pedidoplatos.push({\r\n                plato_id: plato_id,\r\n                pedidoplato_cant: 1,\r\n              });\r\n              return objPedido;\r\n            }\r\n            return objPedido;\r\n          }),\r\n        ];\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: globalPedidosNuevo,\r\n        });\r\n      }\r\n    } else {\r\n      // si la mesa actual seleccionada no tuviera ningun pedido\r\n      const globalPedidosNuevo = [\r\n        ...globalPedidos,\r\n        {\r\n          mesa_id: globalObjMesa.mesa_id,\r\n          pedido_nro: \"1000\",\r\n          pedido_est: \"pendiente\",\r\n          pedidoplatos: [\r\n            {\r\n              plato_id: plato_id,\r\n              pedidoplato_cant: 1,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n      dispatch({\r\n        type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n        data: globalPedidosNuevo,\r\n      });\r\n    }\r\n  };\r\n\r\n  const globalPagar = () => {\r\n    const { globalPedidos, globalObjMesa } = state;\r\n    let pedidoActual = globalPedidos.find(\r\n      (objPedido) => objPedido.mesa_id === globalObjMesa.mesa_id\r\n    );\r\n    const fechaActual = moment().format(\"YYYY-MM-DD hh:mm:ss\");\r\n    pedidoActual.pedido_fech = fechaActual;\r\n    pedidoActual.usu_id = usu_id;\r\n\r\n    posPedido(pedidoActual).then((rpta) => {\r\n      if (rpta.ok) {\r\n        // limpiar la mesa del arreglo de pedidos globales\r\n        const globalPedidosNuevo = [\r\n          ...globalPedidos.filter(\r\n            (objPedido) => objPedido.mesa_id !== globalObjMesa.mesa_id\r\n          ),\r\n        ];\r\n        dispatch({\r\n          type: \"ACTUALIZAR_GLOBAL_PEDIDOS\",\r\n          data: globalPedidosNuevo,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PosContext.Provider\r\n      value={{\r\n        globalObjMesa: state.globalObjMesa,\r\n        globalObjCategoria: state.globalObjCategoria,\r\n        globalPedidos: state.globalPedidos,\r\n        seleccionarCategoria: seleccionarCategoria,\r\n        seleccionarMesa: seleccionarMesa,\r\n        incrementarPlato: incrementarPlato,\r\n        globalPagar: globalPagar,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PosContext.Provider>\r\n  );\r\n};\r\nexport default PosState;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Pos from \"../modules/pos/screens/Pos\";\r\nimport \"./../modules/pos/styles/pos.css\";\r\nimport PosHeader from \"../modules/pos/components/PosHeader\";\r\nimport PosNavigation from \"../modules/pos/components/PosNavigation\";\r\nimport PosState from \"../context/pos/posState\";\r\nconst RouterPos = () => {\r\n  return (\r\n    <PosState>\r\n      <PosHeader />\r\n      <main className=\"pos-container\">\r\n        <PosNavigation />\r\n        <Switch>\r\n          <Route path={\"/pos\"} component={Pos} />\r\n        </Switch>\r\n      </main>\r\n    </PosState>\r\n  );\r\n};\r\n\r\nexport default RouterPos;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../context/auth/authContext\";\r\n\r\nconst RutaPrivada = ({ path, componente: Componente }) => {\r\n  const localAuthContext = useContext(AuthContext);\r\n  const { autenticado, cargando } = localAuthContext;\r\n\r\n  if (cargando) {\r\n    return <h5>Cargando...</h5>;\r\n  } else {\r\n    return autenticado ? (\r\n      <Route path={path} component={Componente} />\r\n    ) : (\r\n      <Redirect to={\"/\"} />\r\n    );\r\n  }\r\n};\r\n\r\nexport default RutaPrivada;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  HashRouter,\r\n} from \"react-router-dom\";\r\nimport RouterAuth from \"./RouterAuth\";\r\nimport RouterAdmin from \"./RouterAdmin\";\r\nimport RouterGuest from \"./RouterGuest\";\r\nimport RouterPos from \"./RouterPos\";\r\nimport RutaPrivada from \"./RutaPrivada\";\r\n\r\nconst RouterMain = () => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Switch>\r\n        <Route path={\"/auth\"} component={RouterAuth} />\r\n        <RutaPrivada path={\"/admin\"} componente={RouterAdmin} />\r\n        <RutaPrivada path={\"/pos\"} componente={RouterPos} />\r\n        {/* <Route path={\"/admin\"} component={RouterAdmin} /> */}\r\n        {/* <Route path={\"/pos\"} component={RouterPos} /> */}\r\n\r\n        <Route path={\"/\"} component={RouterGuest} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default RouterMain;\r\n","const AuthReducer = (stateActual, action) => {\r\n  switch (action.type) {\r\n    case \"INICIAR_SESION\":\r\n      return {\r\n        autenticado: true,\r\n        usu_nom: action.data.usu_nom,\r\n        usu_id: action.data.usu_id,\r\n        token: action.data.token,\r\n        cargando: false,\r\n      };\r\n    case \"CERRAR_SESION\":\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        autenticado: false,\r\n        usu_nom: null,\r\n        usu_id: null,\r\n        token: null,\r\n        cargando: false,\r\n      };\r\n\r\n    default:\r\n      return { ...stateActual };\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport { postVerificar } from \"../../services/auth\";\r\n\r\nconst AuthState = (props) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, {\r\n    autenticado: false,\r\n    usu_nom: null,\r\n    usu_id: null,\r\n    token: null,\r\n    cargando: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    iniciarSesionConLocalStorage();\r\n  }, []);\r\n\r\n  const iniciarSesionConLocalStorage = () => {\r\n    if (!localStorage.getItem(\"token\")) return;\r\n    const token = localStorage.getItem(\"token\");\r\n    const payloadEnc = token.split(\".\")[1];\r\n    const payloadDes = window.atob(payloadEnc);\r\n    const payloadJSON = JSON.parse(payloadDes);\r\n\r\n    postVerificar(token).then((rpta) => {\r\n      rpta\r\n        ? dispatch({\r\n            type: \"INICIAR_SESION\",\r\n            data: {\r\n              ...payloadJSON,\r\n              token,\r\n            },\r\n          })\r\n        : dispatch({\r\n            type: \"CERRAR_SESION\",\r\n          });\r\n    });\r\n  };\r\n\r\n  const iniciarSesion = (token) => {\r\n    const payloadEnc = token.split(\".\")[1];\r\n    /**\r\n     * window.atob(\"algoencriptadoenBASE64\") retorna el contenido desencriptado\r\n     * window.btoa(\"algoquequeremosencriptar\") retorna el contenido encriptado\r\n     */\r\n    const payloadDes = window.atob(payloadEnc);\r\n    const payloadJSON = JSON.parse(payloadDes);\r\n    localStorage.setItem(\"token\", token);\r\n    dispatch({\r\n      type: \"INICIAR_SESION\",\r\n      data: {\r\n        ...payloadJSON,\r\n        token,\r\n      },\r\n    });\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    dispatch({\r\n      type: \"CERRAR_SESION\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        autenticado: state.autenticado,\r\n        usu_nom: state.usu_nom,\r\n        usu_id: state.usu_id,\r\n        cargando: state.cargando,\r\n        iniciarSesion: iniciarSesion,\r\n        cerrarSesion,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n","import React from \"react\";\nimport RouterMain from \"./routers/RouterMain\";\nimport AuthState from \"./context/auth/authState\";\n\n\nconst App = () => {\n  return (\n    <AuthState>\n      <RouterMain />\n    </AuthState>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}